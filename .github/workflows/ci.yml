---
name: "Nornir NETCONF"

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "develop", "master" ]

jobs:
  linters:
    name: linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Lint & Code Format
        run: |
          echo 'Running Flake8' && \
          poetry run flake8 . && \
          echo 'Running Black' && \
          poetry run black --check --diff . && \
          echo 'Running Yamllint' && \
          poetry run yamllint . && \
          echo 'Running pydocstyle' && \
          poetry run pydocstyle . && \
          echo 'Running Bandit' && \
          poetry run bandit --recursive ./ --configfile .bandit.yml && \
          echo 'Running MyPy' && \
          poetry run mypy .

  test:
    name: Testing on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    env:
      SKIP_INTEGRATION_TESTS: False
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Start containers
        run: docker-compose up -d

      - name: Start CLAB
        run: docker-compose run clab

      - name: Show Containers
        run: docker ps

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --no-interaction

      - name: Sleep for 4 minutes for CLAB
        run: sleep 190s
        shell: bash

      - name: Pytest
        run: |
          poetry run pytest --cov=nornir_netconf --cov-report=xml -vv

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
