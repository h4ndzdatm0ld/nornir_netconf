:py:mod:`netconf_edit_config`
=============================

.. py:module:: netconf_edit_config

.. autoapi-nested-parse::

   NETCONF edit config.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   netconf_edit_config.netconf_edit_config



.. py:function:: netconf_edit_config(task: nornir.core.task.Task, config: str, target: Optional[str] = 'running', manager: Optional[ncclient.manager.Manager] = None, default_operation: Optional[str] = 'merge') -> nornir.core.task.Result

   Edit configuration of the device using Netconf.

   :param config: Configuration snippet to apply
   :type config: str
   :param target: Target configuration store
   :type target: str
   :param manager: NETCONF Manager
   :type manager: Manager
   :param default_operation: merge or replace
   :type default_operation: str

   .. rubric:: Examples

   Simple example::

       > nr.run(task=netconf_edit_config, config=desired_config)

   Changing Default Operation::

       > nr.run(task=netconf_edit_config, config=desired_config, default_operation="replace")

   Changing Default Target of `running` to `candidate`::

       > nr.run(task=netconf_edit_config, target="candidate", config=desired_config, default_operation="replace")

   :returns:

             Result object with the following attributes set::

                 * result (RpcResult): Rpc and Manager


