:py:mod:`helpers.rpc_helpers`
=============================

.. py:module:: helpers.rpc_helpers

.. autoapi-nested-parse::

   Helper to extract info from RPC reply.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   helpers.rpc_helpers.check_capability
   helpers.rpc_helpers.xml_to_dict
   helpers.rpc_helpers.unpack_rpc
   helpers.rpc_helpers.get_result



.. py:function:: check_capability(capabilities: List[str], capability: str) -> bool

   Evaluate capabilities and return True if capability is available.


.. py:function:: xml_to_dict(rpc: ncclient.operations.rpc.RPCReply) -> Union[Any, Dict[str, str]]

   Convert XML from RPC reply to dict.

   Args:
       rpc (RPCReply): RPC Reply from Netconf Server

   Returns:
       Dict: xml response -> Dict


.. py:function:: unpack_rpc(rpc: ncclient.operations.rpc.RPCReply, xmldict: bool = False) -> Dict[str, Union[ncclient.operations.rpc.RPCReply, str]]

   Extract RPC attrs of interest.

   Args:
       rpc (RPCReply): RPC Reply from Netconf Server
       xmldict (boolean): convert xml to dict

   Return:
       Dict: "RPC Attributes"


.. py:function:: get_result(rpc: Union[ncclient.operations.rpc.RPCReply, Dict[str, Any]], xmldict: bool = False) -> Dict[str, Union[ncclient.operations.rpc.RPCReply, str]]

   Check if RPC reply is valid and unpack.

   Args:
       rpc (Union[RPCReply, Dict]): RPC Reply from Netconf Server or Dict
       xmldict (boolean): convert xml to dict

   Returns:
       Dict: Results dict to expand in Result object


