:py:mod:`netconf_lock`
======================

.. py:module:: netconf_lock

.. autoapi-nested-parse::

   NETCONF lock.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   netconf_lock.netconf_lock



.. py:function:: netconf_lock(task: nornir.core.task.Task, datastore: str, manager: ncclient.manager.Manager = None, operation: str = 'lock') -> nornir.core.task.Result

   NETCONF locking operations for a specified datastore.

   By default, netconf_lock operations will display the 'data_xml'
   extracted from the RPCReply of the server, as it should be mininal
   data to display unlike other operations.

   Task name dynamically updated based on operation.

   Arguments:
       datastore (str): Datastore to lock
       manager (Manager): Manager to use if operation=='unlock'
       operation (str): Unlock or Lock
   Examples:
       Simple example::

           > nr.run(task=netconf_lock)

       lock candidate datestore::

           > nr.run(task=netconf_lock,
           >        operation="lock",
           >        datastore="candidate")

   Returns:
       Result object with the following attributes set:
         * unpack_rpc (``dict``):


